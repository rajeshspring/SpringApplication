<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<context:annotation-config />

<!-- autowaring service to dao Rajesh start IOC-->



<bean id="loginServices" class="com.serviceImpl.LoginServiceImpl" ></bean>
<bean id="loginDAO" class="com.daoImpl.LoginDaoImpl"></bean>

<bean id="employeeSevice" class="com.serviceImpl.EmployeeServiceImpl" ></bean>
<bean id="employeeDao" class="com.daoImpl.EmployeeDaoImpl"></bean>

<bean id="masterService" class="com.serviceImpl.MasterServiceImpl" ></bean>
<bean id="masterServiceDao" class="com.daoImpl.MasterServiceDaoImpl"></bean>


<!-- Bean for DWR -->
<!-- <bean id="springService" class="com.service.ArithmeticService"></bean> -->




<!-- Validator and message property file path mapping  -->

<bean id="employeeValidator" class="com.validator.EmployeeValidator">
<property name="propertiesLocation" value="classpath:messages_en.properties"/>
</bean>


<bean id="loginValidator" class="com.validator.LoginValidator">
<property name="propertiesLocation" value="classpath:messages_en.properties"/>
</bean>




<!-- ajax mapping -->

<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
<property name="messageConverters">
  <list>
    <ref bean="jacksonMessageConverter"/>
  </list>
</property>
</bean>  
 




<!-- Database Beans  -->
 
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name="location" value="classpath:hibernate.properties" /> 
  </bean>
  
 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <property name="driverClassName" value="${hibernate.connection.driver_class}" /> 
  <property name="url" value="${hibernate.connection.url}" /> 
  <property name="username" value="${hibernate.connection.username}" /> 
  <property name="password" value="${hibernate.connection.password}" /> 
  </bean>
 
 <!--  Hibernate session factory   --> 
 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
  <property name="dataSource" ref="dataSource" /> 
 	<property name="hibernateProperties">
	 <props>
		  <prop key="hibernate.dialect">${hibernate.dialect}</prop> 
		  <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> 
		  <prop key="use_outer_join">${hibernate.use_outer_join}</prop> 
		  <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop> 
		  <prop key="hibernate.cache.use_query_cache">true</prop> 
		  <prop key="hibernate.cache.provider_class">${hibernate.cache.provider}</prop> 
<!-- 		  <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop> -->
<!-- 		  <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop> -->
<!-- 		  <prop key="hibernate.connection.pool_size">${hibernate.connection.pool_size}</prop> -->
<!-- 		  <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>  -->
<!-- 		  <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>  -->
		  <prop key="hibernate.connection.release_mode">after_statement</prop> 
		  <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop> 
		  <prop key="hibernate.default_schema">emp</prop>
  	</props>
	</property>
	
 	<!-- pojo scaning package -->
	<property name="packagesToScan">
		<list>
		<value>com.pojo</value>
		<value>com.pojo.Employee</value>
        <value>com.pojo.Manager</value>
        <value>com.pojo.OnsideEmployees</value>
         
         
         
         <value>com.master.pojo</value>
        <value>com.master.pojo.State</value>
        <value>com.master.pojo.District</value>
       
        </list>
 	</property>
  <property name="schemaUpdate" value="${hibernate.schemaUpdate}" /> 
 </bean>
 </beans>
